---
- name: Gather instance facts
  ec2_metadata_facts:
  register: instance_facts

- name: Reconfigure our logging services so we audit correctly
  include: configure_auditing.yml
  when:
    - manage_auditing

- name: Reconfigure our system time sync
  include: configure_time.yml

- name: Ensure we have our alfresco directories in place with the correct owners
  file:
    path: "{{ item }}"
    state: directory
    owner: tomcat
    group: tomcat
    mode: 0775
    recurse: true
  become: true
  with_items:
    - /usr/share/tomcat/shared/classes/extension
    - /usr/share/tomcat/shared/classes/alfresco/hazelcast
    - /srv/alf_data/contentstore
    - /srv/alf_data/contentstore.deleted
    - /srv/cache
    - /usr/share/tomcat/shared/classes/alfresco/extension

- name: Ensure we have our logging properties installed
  copy:
    src: "{{ role_path }}/files/log4j.properties"
    dest: "/usr/share/tomcat/{{ item }}"
    owner: tomcat
    group: tomcat
  become: true
  with_items:
    - shared/classes/extension/log4j.properties
    - shared/classes/alfresco/extension/log4j.properties

- name: Get our ghostscript version
  command: "ghostscript --version"
  register: gs_version
  no_log: true

- name: Find our soffice.bin file
  find:
    paths: /
    recurse: yes
    patterns: "soffice.bin"
    file_type: "file"
  register: soffice_result
  failed_when: soffice_result.matched == 0

- name: Set template facts
  set_fact:
    libre_office_path: "{{ soffice_result.files[0].path }}"
    ghostscript_ver: "{{ gs_version.stdout }}"
    alf_properties: /usr/share/tomcat/shared/classes/alfresco-global.properties
    csrf_properties: /usr/share/tomcat/shared/classes/alfresco/web-extension/share-config-custom.xml
    admin_properties: /usr/share/tomcat/shared/classes/alfresco/extension/web-scripts-config-custom.xml
    interface_ip: "{{ instance_facts.ansible_facts.ansible_ec2_local_ipv4 }}"
    slingshot_properties: /usr/share/tomcat/shared/classes/alfresco/web-extension/custom-slingshot-application-context.xml
    hz_aws_properties: /usr/share/tomcat/shared/classes/alfresco/hazelcast/hazelcast-tcp.xml

- name: Create our templated config files
  template:
    src: "{{ role_path }}/templates/{{ item.file }}"
    dest: "{{ item.dest }}"
    owner: tomcat
    group: tomcat
  with_items:
    - { file: "alfresco-global.properties", dest: "{{ alf_properties }}" }
    - {
        file: "custom-slingshot-application-context.xml",
        dest: "{{ slingshot_properties }}",
      }
    - { file: "share-config-custom.xml", dest: "{{ csrf_properties }}" }
    - { file: "web-scripts-config-custom.xml", dest: "{{ admin_properties }}" }
    - { file: "context.xml", dest: "/usr/share/tomcat/conf/context.xml" }
    - { file: "hazelcast-tcp.xml", dest: "{{ hz_aws_properties }}" }
    - { file: "server.xml", dest: "/usr/share/tomcat/conf/server.xml" }

- name: Tomcat service autostart set
  service:
    name: tomcat
    enabled: true

- name: install nginx
  package:
    name: nginx
    state: present
  when:
    - running_in_test_mode

- name: Get our installed package list
  yum:
    list: installed
  register: packages_installed

- name: Set nginx_installed fact
  set_fact:
    nginx_installed: "{{ packages_installed.results|selectattr('name', 'search', 'nginx')|list|length }}"

- name: Install our templates
  template:
    src: "{{ role_path }}/templates/nginx/app.conf.j2"
    dest: "/etc/nginx/conf.d/app.conf"
    group: nginx
    owner: nginx

- name: Install nginx config
  template:
    src: "{{ role_path }}/templates/nginx/nginx.conf"
    dest: "/etc/nginx/nginx.conf"
    group: nginx
    owner: nginx

- name: Remove our default.conf
  file:
    path: /etc/nginx/conf.d/default.conf
    state: absent

- name: Restart our nginx service
  service:
    name: nginx
    state: restarted
